# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()
GET		/async/trends				controllers.Async.trends()
GET		/async/stream				controllers.Async.stream()
GET		/async/sentiment			controllers.Async.sentiment()
GET		/async/media/suggest		controllers.Async.suggestMedia()
GET		/async/media/get/:text		controllers.Async.getMedia(text: String)
GET		/async/media/remove/:id		controllers.Async.removeMedia(id: String)
GET		/async/media/clear			controllers.Async.clearMedia()
GET		/band	  					controllers.Application.noband()
GET		/band/:bandID				controllers.Application.band(bandID: String)
GET		/keyword/:text				controllers.Application.keyword(text: String)
GET     /test	        			controllers.Application.test()
GET		/testtts					controllers.Application.testTTS()
GET		/cleanup					controllers.Application.cleanup()

# Map static resources from the /public folder to the /assets URL path
GET     /public/*file               controllers.Assets.at(path="/public", file)
# Dynamically created audio
GET 	/audio/:tweetID				controllers.TweetsAudioService.getAudio(tweetID: Long)

# SecureSocial routes
# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout
# User Registration and password handling 
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange
# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized
